name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17.4
        env:
          POSTGRES_USER: pguser
          POSTGRES_PASSWORD: pgpassword
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    env:
      PG_HOST: localhost
      PG_USER: pguser
      PG_PASSWORD: pgpassword
      PG_DB: postgres
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: postgres
      LLM_EVAL_ENCRYPTION_KEY: 34614d1d76c0e2d2e94f87948f2325324a352a6948963c0ce20e9691b9ea1559
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install Poetry
        run: pip install --root-user-action=ignore poetry --quiet
      
      - name: Install dependencies
        working-directory: backend
        run: poetry install --quiet
      
      - name: Run tests with coverage
        working-directory: backend
        run: poetry run pytest --cov llm_eval tests
  
  ui-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Run tests with coverage
        working-directory: frontend
        run: npm run test:coverage