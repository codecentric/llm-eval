"""Initial migration

Revision ID: 44ae41eda38f
Revises:
Create Date: 2025-06-17 12:18:12.752606

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "44ae41eda38f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "evaluation_metric",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("version", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column(
            "metric_config", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("created_by", sa.String(length=36), nullable=True),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_by", sa.String(length=36), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_by", sa.String(length=36), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "llm_endpoint",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("version", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("type", sa.String(length=255), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "endpoint_config", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("created_by", sa.String(length=36), nullable=True),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_by", sa.String(length=36), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_by", sa.String(length=36), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "qa_catalog_generator_temp_data_source_config",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("config", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "qa_catalog_group",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "qa_catalog",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column(
            "revision", sa.Integer(), server_default=sa.text("0"), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("qa_catalog_group_id", sa.String(length=36), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "GENERATING",
                "READY",
                "FAILURE",
                name="qacatalogstatus",
                native_enum=False,
            ),
            server_default="READY",
            nullable=False,
        ),
        sa.Column("error", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["qa_catalog_group_id"],
            ["qa_catalog_group.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "evaluation",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("version", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("error", sa.Text(), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "RUNNING",
                "SUCCESS",
                "FAILURE",
                name="evaluationstatus",
                native_enum=False,
            ),
            server_default="SUCCESS",
            nullable=False,
        ),
        sa.Column("catalog_id", sa.String(length=36), nullable=True),
        sa.Column("llm_endpoint_id", sa.String(length=36), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("created_by", sa.String(length=36), nullable=True),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_by", sa.String(length=36), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_by", sa.String(length=36), nullable=True),
        sa.ForeignKeyConstraint(
            ["catalog_id"],
            ["qa_catalog.id"],
        ),
        sa.ForeignKeyConstraint(
            ["llm_endpoint_id"],
            ["llm_endpoint.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "qa_pair",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("expected_output", sa.Text(), nullable=False),
        sa.Column("contexts", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("question", sa.Text(), nullable=False),
        sa.Column("meta_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("qa_catalog_id", sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(
            ["qa_catalog_id"],
            ["qa_catalog.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "evaluation_evaluation_metric",
        sa.Column("evaluation_id", sa.String(length=36), nullable=False),
        sa.Column("metric_id", sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(
            ["evaluation_id"],
            ["evaluation.id"],
        ),
        sa.ForeignKeyConstraint(
            ["metric_id"],
            ["evaluation_metric.id"],
        ),
        sa.PrimaryKeyConstraint("evaluation_id", "metric_id"),
    )
    op.create_table(
        "test_case",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("version", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("error", sa.Text(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "RETRIEVING_ANSWER",
                "EVALUATING",
                "SUCCESS",
                "FAILURE",
                name="testcasestatus",
                native_enum=False,
            ),
            server_default="SUCCESS",
            nullable=False,
        ),
        sa.Column("grouping_key", sa.String(length=36), nullable=False),
        sa.Column("index", sa.Integer(), server_default="0", nullable=False),
        sa.Column("input", sa.Text(), nullable=False),
        sa.Column("actual_output", sa.Text(), nullable=True),
        sa.Column("expected_output", sa.Text(), nullable=True),
        sa.Column("context", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "retrieval_context", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("meta_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("llm_configuration_id", sa.String(length=255), nullable=True),
        sa.Column("llm_configuration_name", sa.String(length=255), nullable=True),
        sa.Column("llm_configuration_version", sa.String(length=255), nullable=True),
        sa.Column("evaluation_id", sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(
            ["evaluation_id"],
            ["evaluation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "grouping_key", "index", "evaluation_id", name="ui_evaluation_test_case"
        ),
    )
    op.create_table(
        "test_case_evaluation_result",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("threshold", sa.Float(), nullable=True),
        sa.Column("success", sa.Boolean(), nullable=False),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("reason", sa.Text(), nullable=True),
        sa.Column("strict_mode", sa.Boolean(), nullable=True),
        sa.Column("evaluation_model", sa.String(length=255), nullable=True),
        sa.Column("error", sa.Text(), nullable=True),
        sa.Column("evaluation_cost", sa.Float(), nullable=True),
        sa.Column("verbose_logs", sa.Text(), nullable=True),
        sa.Column("test_case_id", sa.String(length=36), nullable=False),
        sa.Column("evaluation_metric_id", sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(
            ["evaluation_metric_id"],
            ["evaluation_metric.id"],
        ),
        sa.ForeignKeyConstraint(
            ["test_case_id"],
            ["test_case.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("test_case_evaluation_result")
    op.drop_table("test_case")
    op.drop_table("evaluation_evaluation_metric")
    op.drop_table("qa_pair")
    op.drop_table("evaluation")
    op.drop_table("qa_catalog")
    op.drop_table("qa_catalog_group")
    op.drop_table("qa_catalog_generator_temp_data_source_config")
    op.drop_table("llm_endpoint")
    op.drop_table("evaluation_metric")
    # ### end Alembic commands ###
